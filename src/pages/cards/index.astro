---
// src/pages/cards/index.astro
import Layout from '../../layouts/Layout.astro';

// 安全地获取内容集合
let allCards = [];
try {
  const { getCollection } = await import('astro:content');
  try {
    allCards = await getCollection('cards');
  } catch (error) {
    console.warn('Cards collection not found, using demo data');
    // 演示数据（移除了rating字段）
    allCards = [
      {
        slug: 'demo-card-1',
        data: {
          name: 'CryptoCard Elite',
          title: 'CryptoCard Elite - 顶级数字货币卡片',
          description: '支持多种加密货币的高端数字卡片，提供优质的消费体验',
          cardType: 'visa',
          isVirtual: true,
          isPhysical: true,
          virtualCardPrice: 0,
          physicalCardPrice: 100,
          depositFee: '0%',
          transactionFee: '1.5%',
          withdrawalFee: '2%',
          annualFee: false,
          affiliateLink: '#',
          publishDate: new Date(),
          featured: true,
          pros: ['支持多币种', '全球可用', '即时发卡'],
          cons: ['实体卡费用高', 'KYC要求严格'],
          supportedCurrencies: ['USDT', 'USDC', 'BTC', 'ETH'],
          issuer: 'Elite Financial',
          supportedRegions: ['全球'],
          kycRequired: true,
          status: 'active'
        }
      },
      {
        slug: 'demo-card-2',
        data: {
          name: 'SimpleCard Basic',
          title: 'SimpleCard Basic - 入门级数字货币卡片',
          description: '适合新手的简单易用数字货币卡片',
          cardType: 'mastercard',
          isVirtual: true,
          isPhysical: false,
          virtualCardPrice: 0,
          physicalCardPrice: 0,
          depositFee: '0.5%',
          transactionFee: '2%',
          withdrawalFee: '2.5%',
          annualFee: false,
          affiliateLink: '#',
          publishDate: new Date(),
          featured: false,
          pros: ['免费申请', '快速审核', '操作简单'],
          cons: ['仅支持虚拟卡', '币种有限'],
          supportedCurrencies: ['USDT', 'USDC'],
          issuer: 'Basic Financial',
          supportedRegions: ['亚洲', '欧洲'],
          kycRequired: false,
          status: 'active'
        }
      },
      {
        slug: 'demo-card-3',
        data: {
          name: 'CryptoMax Pro',
          title: 'CryptoMax Pro - 高端数字货币卡片',
          description: '专为高端用户设计的数字货币卡片，提供最优的费率和服务',
          cardType: 'visa',
          isVirtual: true,
          isPhysical: true,
          virtualCardPrice: 0,
          physicalCardPrice: 50,
          depositFee: '0%',
          transactionFee: '1%',
          withdrawalFee: '1.5%',
          annualFee: true,
          affiliateLink: '#',
          publishDate: new Date(),
          featured: true,
          pros: ['最低费率', 'VIP服务', '快速审核'],
          cons: ['实体卡费用较高'],
          supportedCurrencies: ['USDT', 'USDC', 'BTC', 'ETH', 'DOGE'],
          issuer: 'Premium Financial',
          supportedRegions: ['全球'],
          kycRequired: true,
          status: 'active'
        }
      }
    ];
  }
} catch (error) {
  console.error('Error loading cards:', error);
  allCards = [];
}

// 初始排序：按发布日期
allCards = allCards.sort((a, b) => 
  new Date(b.data.publishDate || new Date()).getTime() - 
  new Date(a.data.publishDate || new Date()).getTime()
);
---

<Layout title="U卡评测列表 - 专业的数字货币U卡评测">
  <div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100">
    <!-- Hero Section -->
    <section class="relative overflow-hidden bg-gradient-to-br from-indigo-600 via-purple-600 to-blue-700 py-20">
      <div class="absolute inset-0 bg-[radial-gradient(circle_at_50%_50%,rgba(255,255,255,0.1),transparent_70%)]"></div>
      <div class="absolute top-0 left-0 w-96 h-96 bg-white/10 rounded-full blur-3xl -translate-x-48 -translate-y-48"></div>
      
      <div class="relative max-w-7xl mx-auto px-6 lg:px-8 text-center">
        <div class="inline-flex items-center px-4 py-2 rounded-full bg-white/20 backdrop-blur-sm border border-white/30 text-white/90 text-sm font-medium mb-8">
          <span class="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></span>
          实时更新 · 专业评测
        </div>
        
        <h1 class="text-5xl lg:text-6xl font-bold text-white mb-6">
          全球顶级
          <span class="text-transparent bg-clip-text bg-gradient-to-r from-yellow-300 to-pink-300">
            数字货币U卡
          </span>
        </h1>
        
        <p class="text-xl text-white/90 mb-8 max-w-3xl mx-auto">
          深度评测市场主流数字货币卡片，帮您找到最适合的加密支付方案
        </p>
        
        <div class="flex flex-wrap justify-center gap-4">
          <div class="bg-white/20 backdrop-blur-sm rounded-full px-6 py-3 border border-white/30">
            <span class="text-white font-semibold">{allCards.length}+ 卡片评测</span>
          </div>
          <div class="bg-white/20 backdrop-blur-sm rounded-full px-6 py-3 border border-white/30">
            <span class="text-white font-semibold">实时更新</span>
          </div>
          <div class="bg-white/20 backdrop-blur-sm rounded-full px-6 py-3 border border-white/30">
            <span class="text-white font-semibold">专业分析</span>
          </div>
        </div>
      </div>
    </section>

    <!-- 筛选和搜索栏 -->
    <section class="py-8 bg-white shadow-sm sticky top-0 z-40">
      <div class="max-w-7xl mx-auto px-6 lg:px-8">
        <!-- 搜索框 -->
        <div class="mb-6">
          <div class="relative max-w-md mx-auto">
            <input 
              type="text" 
              id="searchInput"
              placeholder="搜索卡片名称或发行商..." 
              class="w-full px-4 py-3 pl-12 pr-4 text-gray-700 bg-gray-50 border border-gray-200 rounded-full focus:outline-none focus:border-indigo-500 focus:bg-white"
            />
            <svg class="absolute left-4 top-3.5 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
            </svg>
          </div>
        </div>

        <!-- 筛选选项 -->
        <div class="flex flex-wrap gap-4 justify-center">
          <!-- 卡片类型筛选 -->
          <div class="relative">
            <select id="cardTypeFilter" class="appearance-none bg-gray-50 border border-gray-200 text-gray-700 py-2 px-4 pr-8 rounded-lg focus:outline-none focus:bg-white focus:border-indigo-500">
              <option value="">所有卡片类型</option>
              <option value="visa">Visa</option>
              <option value="mastercard">MasterCard</option>
              <option value="unionpay">UnionPay</option>
            </select>
            <svg class="absolute right-2 top-3 w-4 h-4 text-gray-400 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </div>

          <!-- 卡片形式筛选 -->
          <div class="relative">
            <select id="cardFormFilter" class="appearance-none bg-gray-50 border border-gray-200 text-gray-700 py-2 px-4 pr-8 rounded-lg focus:outline-none focus:bg-white focus:border-indigo-500">
              <option value="">所有形式</option>
              <option value="virtual">仅虚拟卡</option>
              <option value="physical">仅实体卡</option>
              <option value="both">虚拟+实体</option>
            </select>
            <svg class="absolute right-2 top-3 w-4 h-4 text-gray-400 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </div>

          <!-- 年费筛选 -->
          <div class="relative">
            <select id="annualFeeFilter" class="appearance-none bg-gray-50 border border-gray-200 text-gray-700 py-2 px-4 pr-8 rounded-lg focus:outline-none focus:bg-white focus:border-indigo-500">
              <option value="">年费情况</option>
              <option value="free">免年费</option>
              <option value="paid">有年费</option>
            </select>
            <svg class="absolute right-2 top-3 w-4 h-4 text-gray-400 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </div>

          <!-- KYC要求筛选 -->
          <div class="relative">
            <select id="kycFilter" class="appearance-none bg-gray-50 border border-gray-200 text-gray-700 py-2 px-4 pr-8 rounded-lg focus:outline-none focus:bg-white focus:border-indigo-500">
              <option value="">KYC要求</option>
              <option value="required">需要KYC</option>
              <option value="not-required">无需KYC</option>
            </select>
            <svg class="absolute right-2 top-3 w-4 h-4 text-gray-400 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </div>

          <!-- 排序选项 -->
          <div class="relative">
            <select id="sortBy" class="appearance-none bg-gray-50 border border-gray-200 text-gray-700 py-2 px-4 pr-8 rounded-lg focus:outline-none focus:bg-white focus:border-indigo-500">
              <option value="date-desc">最新发布</option>
              <option value="date-asc">最早发布</option>
              <option value="fee-low">费用从低到高</option>
              <option value="fee-high">费用从高到低</option>
              <option value="name-asc">名称 A-Z</option>
              <option value="name-desc">名称 Z-A</option>
            </select>
            <svg class="absolute right-2 top-3 w-4 h-4 text-gray-400 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
            </svg>
          </div>

          <!-- 重置按钮 -->
          <button id="resetFilters" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors">
            重置筛选
          </button>
        </div>

        <!-- 筛选结果统计 -->
        <div class="mt-4 text-center">
          <span class="text-sm text-gray-600">
            共找到 <span id="resultsCount" class="font-semibold text-indigo-600">{allCards.length}</span> 张卡片
          </span>
        </div>
      </div>
    </section>

    <!-- 卡片列表 -->
    <section class="py-16 px-6 lg:px-8">
      <div class="max-w-7xl mx-auto">
        <div id="cardsGrid" class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          {allCards.map((card) => (
            <div class="card-item bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 overflow-hidden group"
                 data-card-type={card.data.cardType}
                 data-is-virtual={card.data.isVirtual}
                 data-is-physical={card.data.isPhysical}
                 data-annual-fee={card.data.annualFee}
                 data-kyc={card.data.kycRequired}
                 data-name={card.data.name}
                 data-issuer={card.data.issuer}
                 data-transaction-fee={parseFloat(card.data.transactionFee)}
                 data-publish-date={card.data.publishDate}>
              <!-- 卡片头部 -->
              <div class="p-6 bg-gradient-to-br from-indigo-50 to-purple-50">
                <div class="flex items-start justify-between mb-4">
                  <div>
                    <h3 class="text-xl font-bold text-gray-900 mb-2">{card.data.name}</h3>
                    <p class="text-sm text-gray-600">{card.data.issuer}</p>
                  </div>
                  {card.data.featured && (
                    <span class="px-3 py-1 bg-gradient-to-r from-yellow-400 to-orange-400 text-white text-xs font-semibold rounded-full">
                      推荐
                    </span>
                  )}
                </div>
                
                <!-- 卡片类型标签 -->
                <div class="flex gap-2">
                  <span class={`px-3 py-1 text-xs font-medium rounded-full ${
                    card.data.cardType === 'visa' 
                      ? 'bg-blue-100 text-blue-700' 
                      : card.data.cardType === 'mastercard'
                      ? 'bg-purple-100 text-purple-700'
                      : 'bg-gray-100 text-gray-700'
                  }`}>
                    {card.data.cardType.toUpperCase()}
                  </span>
                  {card.data.isVirtual && (
                    <span class="px-3 py-1 bg-green-100 text-green-700 text-xs font-medium rounded-full">
                      虚拟卡
                    </span>
                  )}
                  {card.data.isPhysical && (
                    <span class="px-3 py-1 bg-orange-100 text-orange-700 text-xs font-medium rounded-full">
                      实体卡
                    </span>
                  )}
                </div>
              </div>

              <!-- 卡片详情 -->
              <div class="p-6">
                <p class="text-gray-600 text-sm mb-4 line-clamp-2">
                  {card.data.description}
                </p>

                <!-- 主要特性 -->
                <div class="space-y-3 mb-6">
                  <div class="flex items-center justify-between text-sm">
                    <span class="text-gray-500">交易费用</span>
                    <span class="font-semibold text-gray-900">{card.data.transactionFee}</span>
                  </div>
                  <div class="flex items-center justify-between text-sm">
                    <span class="text-gray-500">提现费用</span>
                    <span class="font-semibold text-gray-900">{card.data.withdrawalFee}</span>
                  </div>
                  <div class="flex items-center justify-between text-sm">
                    <span class="text-gray-500">年费</span>
                    <span class="font-semibold text-gray-900">
                      {card.data.annualFee ? '有' : '免费'}
                    </span>
                  </div>
                  <div class="flex items-center justify-between text-sm">
                    <span class="text-gray-500">KYC认证</span>
                    <span class="font-semibold text-gray-900">
                      {card.data.kycRequired ? '需要' : '无需'}
                    </span>
                  </div>
                </div>

                <!-- 支持的币种 -->
                <div class="mb-6">
                  <p class="text-xs text-gray-500 mb-2">支持币种</p>
                  <div class="flex flex-wrap gap-1">
                    {card.data.supportedCurrencies?.slice(0, 4).map((currency) => (
                      <span class="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded">
                        {currency}
                      </span>
                    ))}
                    {card.data.supportedCurrencies?.length > 4 && (
                      <span class="px-2 py-1 bg-gray-100 text-gray-500 text-xs rounded">
                        +{card.data.supportedCurrencies.length - 4}
                      </span>
                    )}
                  </div>
                </div>

                <!-- 查看详情按钮 -->
                <a 
                  href={`/cards/${card.slug}`}
                  class="block w-full py-3 bg-gradient-to-r from-indigo-600 to-purple-600 text-white text-center font-semibold rounded-xl hover:from-indigo-700 hover:to-purple-700 transition-all duration-300 group-hover:scale-105"
                >
                  查看详情
                </a>
              </div>
            </div>
          ))}
        </div>

        <!-- 无结果提示 -->
        <div id="noResults" class="hidden text-center py-12">
          <svg class="w-16 h-16 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <p class="text-gray-500 text-lg">没有找到符合条件的卡片</p>
          <button id="resetFromEmpty" class="mt-4 px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors">
            重置筛选条件
          </button>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-16 bg-gradient-to-r from-indigo-600 to-purple-600">
      <div class="max-w-4xl mx-auto px-6 lg:px-8 text-center">
        <h2 class="text-3xl font-bold text-white mb-4">
          需要帮助选择合适的U卡？
        </h2>
        <p class="text-xl text-white/90 mb-8">
          我们的专家团队随时为您提供专业建议
        </p>
        <a 
          href="/contact" 
          class="inline-flex items-center px-8 py-4 bg-white text-indigo-600 font-semibold rounded-full hover:bg-gray-100 transition-all duration-300"
        >
          立即咨询
          <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </a>
      </div>
    </section>
  </div>

  <!-- JavaScript for filtering and sorting -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const searchInput = document.getElementById('searchInput');
      const cardTypeFilter = document.getElementById('cardTypeFilter');
      const cardFormFilter = document.getElementById('cardFormFilter');
      const annualFeeFilter = document.getElementById('annualFeeFilter');
      const kycFilter = document.getElementById('kycFilter');
      const sortBy = document.getElementById('sortBy');
      const resetButton = document.getElementById('resetFilters');
      const resetFromEmptyButton = document.getElementById('resetFromEmpty');
      const cardsGrid = document.getElementById('cardsGrid');
      const resultsCount = document.getElementById('resultsCount');
      const noResults = document.getElementById('noResults');
      
      let cards = Array.from(document.querySelectorAll('.card-item'));
      
      function filterAndSortCards() {
        const searchTerm = searchInput.value.toLowerCase();
        const cardType = cardTypeFilter.value;
        const cardForm = cardFormFilter.value;
        const annualFee = annualFeeFilter.value;
        const kyc = kycFilter.value;
        const sortOption = sortBy.value;
        
        // Filter cards
        let filteredCards = cards.filter(card => {
          // Search filter
          if (searchTerm) {
            const name = card.dataset.name?.toLowerCase() || '';
            const issuer = card.dataset.issuer?.toLowerCase() || '';
            if (!name.includes(searchTerm) && !issuer.includes(searchTerm)) {
              return false;
            }
          }
          
          // Card type filter
          if (cardType && card.dataset.cardType !== cardType) {
            return false;
          }
          
          // Card form filter
          if (cardForm) {
            const isVirtual = card.dataset.isVirtual === 'true';
            const isPhysical = card.dataset.isPhysical === 'true';
            
            if (cardForm === 'virtual' && !isVirtual) return false;
            if (cardForm === 'physical' && !isPhysical) return false;
            if (cardForm === 'both' && (!isVirtual || !isPhysical)) return false;
          }
          
          // Annual fee filter
          if (annualFee) {
            const hasAnnualFee = card.dataset.annualFee === 'true';
            if (annualFee === 'free' && hasAnnualFee) return false;
            if (annualFee === 'paid' && !hasAnnualFee) return false;
          }
          
          // KYC filter
          if (kyc) {
            const kycRequired = card.dataset.kyc === 'true';
            if (kyc === 'required' && !kycRequired) return false;
            if (kyc === 'not-required' && kycRequired) return false;
          }
          
          return true;
        });
        
        // Sort cards
        filteredCards.sort((a, b) => {
          switch(sortOption) {
            case 'date-desc':
              return new Date(b.dataset.publishDate) - new Date(a.dataset.publishDate);
            case 'date-asc':
              return new Date(a.dataset.publishDate) - new Date(b.dataset.publishDate);
            case 'fee-low':
              return parseFloat(a.dataset.transactionFee) - parseFloat(b.dataset.transactionFee);
            case 'fee-high':
              return parseFloat(b.dataset.transactionFee) - parseFloat(a.dataset.transactionFee);
            case 'name-asc':
              return a.dataset.name.localeCompare(b.dataset.name);
            case 'name-desc':
              return b.dataset.name.localeCompare(a.dataset.name);
            default:
              return 0;
          }
        });
        
        // Update display
        cards.forEach(card => card.style.display = 'none');
        filteredCards.forEach(card => card.style.display = 'block');
        
        // Update results count
        resultsCount.textContent = filteredCards.length;
        
        // Show/hide no results message
        if (filteredCards.length === 0) {
          cardsGrid.style.display = 'none';
          noResults.classList.remove('hidden');
        } else {
          cardsGrid.style.display = 'grid';
          noResults.classList.add('hidden');
        }
        
        // Re-append cards in sorted order
        filteredCards.forEach(card => cardsGrid.appendChild(card));
      }
      
      function resetFilters() {
        searchInput.value = '';
        cardTypeFilter.value = '';
        cardFormFilter.value = '';
        annualFeeFilter.value = '';
        kycFilter.value = '';
        sortBy.value = 'date-desc';
        filterAndSortCards();
      }
      
      // Event listeners
      searchInput?.addEventListener('input', filterAndSortCards);
      cardTypeFilter?.addEventListener('change', filterAndSortCards);
      cardFormFilter?.addEventListener('change', filterAndSortCards);
      annualFeeFilter?.addEventListener('change', filterAndSortCards);
      kycFilter?.addEventListener('change', filterAndSortCards);
      sortBy?.addEventListener('change', filterAndSortCards);
      resetButton?.addEventListener('click', resetFilters);
      resetFromEmptyButton?.addEventListener('click', resetFilters);
      
      // Initial setup
      filterAndSortCards();
    });
  </script>
</Layout>
