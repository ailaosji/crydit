---
// src/pages/cards/index.astro
import Layout from '../../layouts/Layout.astro';

// 安全地获取卡片数据
let allCards = [];

try {
  const { getCollection } = await import('astro:content');
  try {
    allCards = await getCollection('cards');
    console.log('Cards loaded:', allCards.length);
  } catch (error) {
    console.warn('Cards collection not found:', error.message);
    // 使用模拟数据
    allCards = [
      {
        slug: 'demo-card-1',
        data: {
          name: 'DemoCard Pro',
          title: 'DemoCard Pro - 专业级虚拟信用卡',
          description: '专业级虚拟信用卡，支持全球支付，零年费，实时到账',
          cardType: 'visa',
          isVirtual: true,
          isPhysical: false,
          virtualCardPrice: 0,
          physicalCardPrice: null,
          depositFee: '0%',
          transactionFee: '1.5%',
          withdrawalFee: '2%',
          annualFee: false,
          rating: 4.8,
          affiliateLink: '#',
          publishDate: new Date(),
          featured: true,
          pros: ['零年费', '实时到账', '全球支付'],
          cons: ['需要KYC认证'],
          supportedCurrencies: ['USDT', 'USDC', 'BTC', 'ETH'],
          issuer: 'Global Payment Solutions',
          supportedRegions: ['全球'],
          kycRequired: true,
          status: 'active'
        }
      },
      {
        slug: 'demo-card-2',
        data: {
          name: 'GlobalPay Card',
          title: 'GlobalPay Card - 全球通用数字货币卡片',
          description: '全球通用数字货币卡片，支持虚拟卡和实体卡，多币种支持',
          cardType: 'mastercard',
          isVirtual: true,
          isPhysical: true,
          virtualCardPrice: 5,
          physicalCardPrice: 15,
          depositFee: '0.5%',
          transactionFee: '2%',
          withdrawalFee: '3%',
          annualFee: true,
          rating: 4.5,
          affiliateLink: '#',
          publishDate: new Date(),
          featured: false,
          pros: ['支持实体卡', '多币种支持', '全球ATM取现'],
          cons: ['有年费', '费率较高'],
          supportedCurrencies: ['USDT', 'USDC', 'BTC', 'ETH', 'BNB'],
          issuer: 'International Card Services',
          supportedRegions: ['欧美', '亚洲'],
          kycRequired: true,
          status: 'active'
        }
      },
      {
        slug: 'demo-card-3',
        data: {
          name: 'CryptoMax Pro',
          title: 'CryptoMax Pro - 高端数字货币卡片',
          description: '专为高端用户设计的数字货币卡片，提供最优的费率和服务',
          cardType: 'visa',
          isVirtual: true,
          isPhysical: true,
          virtualCardPrice: 0,
          physicalCardPrice: 50,
          depositFee: '0%',
          transactionFee: '1%',
          withdrawalFee: '1.5%',
          annualFee: false,
          rating: 4.9,
          affiliateLink: '#',
          publishDate: new Date(),
          featured: true,
          pros: ['最低费率', 'VIP服务', '快速审核'],
          cons: ['实体卡费用较高'],
          supportedCurrencies: ['USDT', 'USDC', 'BTC', 'ETH', 'DOGE'],
          issuer: 'Premium Financial',
          supportedRegions: ['全球'],
          kycRequired: true,
          status: 'active'
        }
      }
    ];
  }
} catch (error) {
  console.error('Error loading cards:', error);
  allCards = [];
}

// 按评分排序
allCards = allCards.sort((a, b) => (b.data.rating || 0) - (a.data.rating || 0));
---

<Layout title="U卡评测列表 - 专业的数字货币U卡评测">
  <div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100">
    <!-- Hero Section -->
    <section class="relative overflow-hidden bg-gradient-to-br from-indigo-600 via-purple-600 to-blue-700 py-20">
      <div class="absolute inset-0 bg-[radial-gradient(circle_at_50%_50%,rgba(255,255,255,0.1),transparent_70%)]"></div>
      <div class="absolute top-0 left-0 w-96 h-96 bg-white/10 rounded-full blur-3xl -translate-x-48 -translate-y-48"></div>
      
      <div class="relative max-w-7xl mx-auto px-6 lg:px-8 text-center">
        <div class="inline-flex items-center px-4 py-2 rounded-full bg-white/20 backdrop-blur-sm border border-white/30 text-white/90 text-sm font-medium mb-8">
          <span class="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></span>
          实时更新 · 专业评测
        </div>
        
        <h1 class="text-5xl lg:text-6xl font-bold text-white mb-6 leading-tight">
          U卡评测大全
        </h1>
        
        <p class="text-xl lg:text-2xl text-white/80 mb-8 max-w-3xl mx-auto leading-relaxed">
          专业评测 {allCards.length} 张数字货币U卡<br>
          为您的数字资产选择提供最权威的参考
        </p>
        
        <!-- 统计数据 -->
        <div class="grid grid-cols-2 lg:grid-cols-4 gap-4 max-w-3xl mx-auto">
          <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20">
            <div class="text-2xl font-bold text-white mb-1">{allCards.length}</div>
            <div class="text-white/70 text-sm">评测U卡</div>
          </div>
          <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20">
            <div class="text-2xl font-bold text-white mb-1">{allCards.filter(card => card.data.featured).length}</div>
            <div class="text-white/70 text-sm">精选推荐</div>
          </div>
          <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20">
            <div class="text-2xl font-bold text-white mb-1">{allCards.filter(card => !card.data.annualFee).length}</div>
            <div class="text-white/70 text-sm">免年费</div>
          </div>
          <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-4 border border-white/20">
            <div class="text-2xl font-bold text-white mb-1">{allCards.filter(card => card.data.isPhysical).length}</div>
            <div class="text-white/70 text-sm">支持实体卡</div>
          </div>
        </div>
      </div>
    </section>

    <!-- 筛选和搜索 -->
    <section class="py-12 bg-white border-b border-gray-200">
      <div class="max-w-7xl mx-auto px-6 lg:px-8">
        <div class="flex flex-col lg:flex-row gap-6 items-start lg:items-center">
          <!-- 搜索框 -->
          <div class="flex-1 max-w-md">
            <div class="relative">
              <input 
                type="text" 
                id="search-input"
                placeholder="搜索U卡名称..." 
                class="w-full px-4 py-3 pl-12 rounded-2xl border border-gray-200 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 outline-none transition-all"
              />
              <svg class="absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
              </svg>
            </div>
          </div>
          
          <!-- 筛选按钮 -->
          <div class="flex flex-wrap gap-3">
            <button class="filter-btn active" data-filter="all">
              全部 ({allCards.length})
            </button>
            <button class="filter-btn" data-filter="featured">
              精选推荐 ({allCards.filter(card => card.data.featured).length})
            </button>
            <button class="filter-btn" data-filter="free">
              免年费 ({allCards.filter(card => !card.data.annualFee).length})
            </button>
            <button class="filter-btn" data-filter="physical">
              实体卡 ({allCards.filter(card => card.data.isPhysical).length})
            </button>
            <button class="filter-btn" data-filter="visa">
              Visa ({allCards.filter(card => card.data.cardType === 'visa').length})
            </button>
            <button class="filter-btn" data-filter="mastercard">
              Mastercard ({allCards.filter(card => card.data.cardType === 'mastercard').length})
            </button>
          </div>
          
          <!-- 排序 -->
          <select 
            id="sort-select" 
            class="px-4 py-3 rounded-2xl border border-gray-200 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 outline-none bg-white"
          >
            <option value="rating">按评分排序</option>
            <option value="name">按名称排序</option>
            <option value="fee">按费率排序</option>
            <option value="date">按更新时间排序</option>
          </select>
        </div>
      </div>
    </section>

    <!-- U卡列表 -->
    <section class="py-16">
      <div class="max-w-7xl mx-auto px-6 lg:px-8">
        {allCards.length > 0 ? (
          <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3" id="cards-grid">
            {allCards.map((card) => (
              <div class="card-item bg-white rounded-3xl shadow-lg hover:shadow-2xl transform hover:-translate-y-2 transition-all duration-500 overflow-hidden border border-gray-100 group" 
                   data-name={card.data.name} 
                   data-type={card.data.cardType} 
                   data-featured={card.data.featured} 
                   data-free={!card.data.annualFee} 
                   data-physical={card.data.isPhysical}
                   data-rating={card.data.rating}
                   data-fee={parseFloat(card.data.transactionFee?.replace('%', '') || '0')}>
                
                <!-- 卡片头部 -->
                <div class="relative">
                  {card.data.featured && (
                    <div class="absolute top-4 left-4 z-10">
                      <span class="px-3 py-1 bg-gradient-to-r from-yellow-400 to-orange-500 text-white text-xs font-bold rounded-full shadow-lg">
                        精选推荐
                      </span>
                    </div>
                  )}
                  
                  <div class="absolute top-4 right-4 z-10">
                    <div class="flex items-center bg-white/90 backdrop-blur-sm rounded-full px-3 py-1 shadow-lg">
                      <span class="text-yellow-500 mr-1">★</span>
                      <span class="text-sm font-bold text-gray-900">{card.data.rating}</span>
                    </div>
                  </div>
                  
                  <!-- 渐变背景 -->
                  <div class={`h-48 bg-gradient-to-br ${
                    card.data.cardType === 'visa' 
                      ? 'from-blue-500 to-indigo-600' 
                      : 'from-red-500 to-pink-600'
                  } relative overflow-hidden`}>
                    <div class="absolute inset-0 bg-black/10 group-hover:bg-black/20 transition-colors"></div>
                    
                    <!-- 卡片类型标识 -->
                    <div class="absolute bottom-4 left-4 text-white">
                      <div class="text-2xl font-bold opacity-90">
                        {card.data.cardType.toUpperCase()}
                      </div>
                      <div class="text-sm opacity-70">
                        {card.data.isVirtual && card.data.isPhysical ? '虚拟卡 + 实体卡' : 
                         card.data.isVirtual ? '虚拟卡' : '实体卡'}
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- 卡片内容 -->
                <div class="p-6">
                  <h3 class="text-xl font-bold mb-3 group-hover:text-indigo-600 transition-colors">
                    <a href={`/cards/${card.slug}`}>
                      {card.data.name}
                    </a>
                  </h3>
                  
                  <p class="text-gray-600 mb-4 text-sm leading-relaxed line-clamp-2">
                    {card.data.description}
                  </p>
                  
                  <!-- 费率信息 -->
                  <div class="grid grid-cols-2 gap-4 mb-6 text-xs">
                    <div class="bg-gray-50 rounded-xl p-3">
                      <div class="text-gray-500 mb-1">交易费</div>
                      <div class="font-bold text-gray-900">{card.data.transactionFee}</div>
                    </div>
                    <div class="bg-gray-50 rounded-xl p-3">
                      <div class="text-gray-500 mb-1">充值费</div>
                      <div class="font-bold text-gray-900">{card.data.depositFee}</div>
                    </div>
                  </div>
                  
                  <!-- 特性标签 -->
                  <div class="flex flex-wrap gap-2 mb-6">
                    {!card.data.annualFee && (
                      <span class="px-2 py-1 bg-green-100 text-green-800 text-xs font-medium rounded-full">
                        免年费
                      </span>
                    )}
                    {card.data.isPhysical && (
                      <span class="px-2 py-1 bg-purple-100 text-purple-800 text-xs font-medium rounded-full">
                        实体卡
                      </span>
                    )}
                    {!card.data.kycRequired && (
                      <span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs font-medium rounded-full">
                        免KYC
                      </span>
                    )}
                  </div>
                  
                  <!-- 优缺点预览 -->
                  {card.data.pros && card.data.pros.length > 0 && (
                    <div class="mb-4">
                      <div class="text-xs text-gray-500 mb-2">主要优势:</div>
                      <ul class="text-xs text-gray-700 space-y-1">
                        {card.data.pros.slice(0, 2).map((pro) => (
                          <li class="flex items-center">
                            <svg class="w-3 h-3 text-green-500 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                            </svg>
                            {pro}
                          </li>
                        ))}
                      </ul>
                    </div>
                  )}
                  
                  <!-- 操作按钮 -->
                  <div class="flex gap-3">
                    <a 
                      href={`/cards/${card.slug}`}
                      class="flex-1 px-4 py-3 bg-gray-100 text-gray-700 rounded-xl text-sm font-medium hover:bg-gray-200 transition-colors text-center"
                    >
                      查看详情
                    </a>
                    <a 
                      href={card.data.affiliateLink}
                      target="_blank"
                      class="flex-1 px-4 py-3 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-xl text-sm font-medium hover:from-indigo-700 hover:to-purple-700 transition-all transform hover:-translate-y-0.5 shadow-lg hover:shadow-xl text-center"
                    >
                      立即申请
                    </a>
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <!-- 空状态 -->
          <div class="bg-white rounded-3xl p-16 text-center shadow-lg">
            <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
              <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"/>
              </svg>
            </div>
            <h3 class="text-2xl font-bold text-gray-900 mb-2">U卡评测内容准备中</h3>
            <p class="text-gray-600">我们的专业团队正在为您准备最详细的U卡评测内容，敬请期待</p>
          </div>
        )}
        
        <!-- 搜索无结果 -->
        <div id="no-results" class="hidden bg-white rounded-3xl p-16 text-center shadow-lg">
          <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
            <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
            </svg>
          </div>
          <h3 class="text-2xl font-bold text-gray-900 mb-2">未找到匹配的U卡</h3>
          <p class="text-gray-600">尝试调整搜索条件或筛选选项</p>
        </div>
      </div>
    </section>

    <!-- 底部CTA -->
    <section class="py-16 bg-gradient-to-r from-gray-900 via-indigo-900 to-purple-900">
      <div class="max-w-4xl mx-auto px-6 lg:px-8 text-center">
        <h2 class="text-4xl font-bold text-white mb-6">
          找到适合您的U卡了吗？
        </h2>
        <p class="text-xl text-white/80 mb-8">
          如需更多建议或有任何疑问，欢迎联系我们的专业团队
        </p>
        <div class="flex flex-col sm:flex-row justify-center gap-4">
          <a 
            href="/contact" 
            class="inline-flex items-center px-8 py-4 bg-white text-gray-900 rounded-2xl hover:bg-gray-100 transform hover:-translate-y-1 transition-all duration-300 font-semibold shadow-xl"
          >
            联系专家顾问
          </a>
          <a 
            href="/articles" 
            class="inline-flex items-center px-8 py-4 bg-white/10 backdrop-blur-sm border border-white/20 text-white rounded-2xl hover:bg-white/20 transform hover:-translate-y-1 transition-all duration-300 font-semibold"
          >
            阅读评测文章
          </a>
        </div>
      </div>
    </section>
  </div>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .filter-btn {
    @apply px-4 py-2 rounded-2xl text-sm font-medium transition-all duration-200 border;
  }
  
  .filter-btn:not(.active) {
    @apply bg-white text-gray-600 border-gray-200 hover:bg-gray-50 hover:border-gray-300;
  }
  
  .filter-btn.active {
    @apply bg-indigo-600 text-white border-indigo-600 shadow-lg;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('search-input');
    const filterBtns = document.querySelectorAll('.filter-btn');
    const sortSelect = document.getElementById('sort-select');
    const cardsGrid = document.getElementById('cards-grid');
    const noResults = document.getElementById('no-results');
    const cardItems = document.querySelectorAll('.card-item');
    
    let currentFilter = 'all';
    let currentSort = 'rating';
    let currentSearch = '';
    
    // 搜索功能
    if (searchInput) {
      searchInput.addEventListener('input', function() {
        currentSearch = this.value.toLowerCase();
        filterAndSort();
      });
    }
    
    // 筛选功能
    filterBtns.forEach(btn => {
      btn.addEventListener('click', function() {
        // 更新active状态
        filterBtns.forEach(b => b.classList.remove('active'));
        this.classList.add('active');
        
        currentFilter = this.dataset.filter;
        filterAndSort();
      });
    });
    
    // 排序功能
    if (sortSelect) {
      sortSelect.addEventListener('change', function() {
        currentSort = this.value;
        filterAndSort();
      });
    }
    
    function filterAndSort() {
      let visibleCards = Array.from(cardItems);
      
      // 应用搜索过滤
      if (currentSearch) {
        visibleCards = visibleCards.filter(card => {
          const name = card.dataset.name.toLowerCase();
          return name.includes(currentSearch);
        });
      }
      
      // 应用分类过滤
      if (currentFilter !== 'all') {
        visibleCards = visibleCards.filter(card => {
          switch (currentFilter) {
            case 'featured':
              return card.dataset.featured === 'true';
            case 'free':
              return card.dataset.free === 'true';
            case 'physical':
              return card.dataset.physical === 'true';
            case 'visa':
              return card.dataset.type === 'visa';
            case 'mastercard':
              return card.dataset.type === 'mastercard';
            default:
              return true;
          }
        });
      }
      
      // 应用排序
      visibleCards.sort((a, b) => {
        switch (currentSort) {
          case 'rating':
            return parseFloat(b.dataset.rating) - parseFloat(a.dataset.rating);
          case 'name':
            return a.dataset.name.localeCompare(b.dataset.name);
          case 'fee':
            return parseFloat(a.dataset.fee) - parseFloat(b.dataset.fee);
          case 'date':
            // 如果有日期数据的话
            return 0;
          default:
            return 0;
        }
      });
      
      // 隐藏所有卡片
      cardItems.forEach(card => {
        card.style.display = 'none';
      });
      
      // 显示过滤后的卡片
      if (visibleCards.length > 0) {
        visibleCards.forEach((card, index) => {
          card.style.display = 'block';
          card.style.order = index;
        });
        
        if (cardsGrid) cardsGrid.style.display = 'grid';
        if (noResults) noResults.classList.add('hidden');
      } else {
        if (cardsGrid) cardsGrid.style.display = 'none';
        if (noResults) noResults.classList.remove('hidden');
      }
    }
    
    // 初始化
    filterAndSort();
  });
</script>