---
// src/pages/index.astro - 优化后的首页卡片列表模块
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

let featuredCards = [];
try {
  const allCards = await getCollection('cards');
  // 按发布日期排序，取前8张作为首页展示
  featuredCards = allCards
    .sort((a, b) => new Date(b.data.publishDate || 0).getTime() - new Date(a.data.publishDate || 0).getTime())
    .slice(0, 8);
} catch (error) {
  console.error('Error loading cards:', error);
  featuredCards = [];
}
---

<Layout title="数字货币U卡评测 - 找到最适合的加密支付方案">
  <div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/50 to-indigo-100/30">
    
    <!-- Hero Section -->
    <section class="relative overflow-hidden bg-gradient-to-br from-indigo-600 via-purple-600 to-blue-700 py-16">
      <div class="absolute inset-0 bg-[radial-gradient(circle_at_50%_50%,rgba(255,255,255,0.1),transparent_70%)]"></div>
      
      <div class="relative max-w-7xl mx-auto px-6 lg:px-8 text-center">
        <div class="inline-flex items-center px-4 py-2 rounded-full bg-white/20 backdrop-blur-sm border border-white/30 text-white/90 text-sm font-medium mb-6">
          <span class="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></span>
          实时更新 · 专业评测 · 权威推荐
        </div>

        <h1 class="text-4xl lg:text-5xl font-bold text-white mb-4">
          全球顶级 <span class="text-transparent bg-clip-text bg-gradient-to-r from-yellow-300 to-pink-300">数字货币U卡</span>
        </h1>

        <p class="text-xl text-white/90 mb-8 max-w-3xl mx-auto">
          深度评测市场主流数字货币卡片，帮您找到最适合的加密支付方案
        </p>

        <div class="flex flex-wrap justify-center gap-4 text-white/80">
          <div class="bg-white/20 backdrop-blur-sm rounded-full px-6 py-3 border border-white/30">
            <span class="font-semibold">{featuredCards.length}+ 卡片评测</span>
          </div>
          <div class="bg-white/20 backdrop-blur-sm rounded-full px-6 py-3 border border-white/30">
            <span class="font-semibold">7x24 实时更新</span>
          </div>
          <div class="bg-white/20 backdrop-blur-sm rounded-full px-6 py-3 border border-white/30">
            <span class="font-semibold">专业深度评测</span>
          </div>
        </div>
      </div>
    </section>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-6 lg:px-8 -mt-8 relative z-10">

      <!-- 筛选和搜索区域 -->
      <section class="mb-8">
        <div class="bg-white rounded-2xl shadow-sm border border-gray-200 p-6">
          <div class="flex flex-col lg:flex-row lg:items-center justify-between gap-4 mb-6">
            <h2 class="text-xl font-bold text-gray-900">热门U卡推荐</h2>
            <div class="flex items-center text-sm text-gray-500">
              <span>共 <span id="filtered-count" class="font-semibold text-indigo-600">{featuredCards.length}</span> 张卡片</span>
              <span class="mx-2">•</span>
              <span>最后更新: 2小时前</span>
            </div>
          </div>

          <!-- 筛选按钮组 -->
          <div class="flex flex-wrap gap-3 mb-4">
            <button id="filter-all" class="filter-btn active px-4 py-2 text-sm font-medium rounded-full transition-all duration-200">
              <i class="fas fa-layer-group mr-2"></i>全部
            </button>
            <button id="filter-free" class="filter-btn px-4 py-2 text-sm font-medium rounded-full transition-all duration-200">
              <i class="fas fa-gift mr-2"></i>免费卡
            </button>
            <button id="filter-virtual" class="filter-btn px-4 py-2 text-sm font-medium rounded-full transition-all duration-200">
              <i class="fas fa-mobile-alt mr-2"></i>支持虚拟卡
            </button>
            <button id="filter-visa" class="filter-btn px-4 py-2 text-sm font-medium rounded-full transition-all duration-200">
              <i class="fas fa-credit-card mr-2"></i>Visa网络
            </button>
            <button id="filter-physical" class="filter-btn px-4 py-2 text-sm font-medium rounded-full transition-all duration-200">
              <i class="fas fa-id-card mr-2"></i>实体卡
            </button>
          </div>

          <!-- 搜索框 -->
          <div class="flex flex-col sm:flex-row gap-3">
            <div class="flex-1 relative">
              <i class="fas fa-search absolute left-3 top-3 text-gray-400"></i>
              <input
                id="search-input"
                type="text"
                placeholder="搜索卡片名称、发行商或特性..."
                class="w-full pl-10 pr-4 py-2.5 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all"
              >
            </div>
            <button id="reset-filters" class="px-6 py-2.5 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg text-sm font-medium transition-colors">
              <i class="fas fa-undo mr-2"></i>重置筛选
            </button>
          </div>
        </div>
      </section>

      <!-- 优化后的卡片表格 -->
      <section class="mb-12">
        <div class="bg-white rounded-2xl shadow-lg overflow-hidden border border-gray-200">
          <!-- 表格容器 -->
          <div class="overflow-x-auto">
            <table class="w-full min-w-[800px]" id="cards-table">
              <!-- 表头 -->
              <thead class="bg-gradient-to-r from-gray-50 to-slate-100 border-b border-gray-200">
                <tr>
                  <th class="px-6 py-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider">
                    <div class="flex items-center space-x-2">
                      <i class="fas fa-hashtag text-gray-400"></i>
                      <span>卡片信息</span>
                    </div>
                  </th>
                  <th class="px-4 py-4 text-center text-sm font-semibold text-gray-700 uppercase tracking-wider">
                    <div class="flex flex-col items-center space-y-1">
                      <i class="fas fa-mobile-alt text-blue-500"></i>
                      <span>虚拟卡</span>
                    </div>
                  </th>
                  <th class="px-4 py-4 text-center text-sm font-semibold text-gray-700 uppercase tracking-wider">
                    <div class="flex flex-col items-center space-y-1">
                      <i class="fas fa-id-card text-green-500"></i>
                      <span>实体卡</span>
                    </div>
                  </th>
                  <th class="px-4 py-4 text-center text-sm font-semibold text-gray-700 uppercase tracking-wider">
                    <div class="flex flex-col items-center space-y-1">
                      <i class="fas fa-percentage text-orange-500"></i>
                      <span>手续费</span>
                    </div>
                  </th>
                  <th class="px-4 py-4 text-center text-sm font-semibold text-gray-700 uppercase tracking-wider">
                    <div class="flex flex-col items-center space-y-1">
                      <i class="fas fa-calendar text-purple-500"></i>
                      <span>年费/月费</span>
                    </div>
                  </th>
                  <th class="px-4 py-4 text-center text-sm font-semibold text-gray-700 uppercase tracking-wider">
                    <div class="flex flex-col items-center space-y-1">
                      <i class="fas fa-rocket text-indigo-500"></i>
                      <span>操作</span>
                    </div>
                  </th>
                </tr>
              </thead>

              <!-- 表格主体 -->
              <tbody id="card-table-body" class="bg-white divide-y divide-gray-100">
                {featuredCards.map((card, index) => (
                  <tr class="hover:bg-gradient-to-r hover:from-gray-50 hover:to-blue-50/30 transition-all duration-200 group">
                    <!-- 卡片信息列 -->
                    <td class="px-6 py-5">
                      <div class="flex items-center space-x-4">
                        <!-- 排名 -->
                        <div class="flex-shrink-0">
                          <div class="w-8 h-8 bg-gradient-to-br from-indigo-500 to-purple-600 text-white rounded-lg flex items-center justify-center font-bold text-sm">
                            {index + 1}
                          </div>
                        </div>

                        <!-- 卡片Logo -->
                        <div class="flex-shrink-0">
                          <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center text-white font-bold text-sm shadow-md group-hover:shadow-lg transition-shadow">
                            {card.data.name.substring(0, 2).toUpperCase()}
                          </div>
                        </div>

                        <!-- 卡片信息 -->
                        <div class="flex-1 min-w-0">
                          <h3 class="text-lg font-semibold text-gray-900 group-hover:text-indigo-600 transition-colors cursor-pointer">
                            <a href={`/cards/${card.slug}`} class="hover:underline">
                              {card.data.name}
                            </a>
                          </h3>
                          <p class="text-sm text-gray-600 line-clamp-2 mt-1 leading-relaxed">
                            {card.data.shortDescription || card.data.description}
                          </p>

                          <!-- 标签 -->
                          <div class="flex flex-wrap gap-2 mt-2">
                            {card.data.network && (
                              <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-blue-100 text-blue-700 rounded-full">
                                <i class="fas fa-network-wired mr-1"></i>
                                {card.data.network.charAt(0).toUpperCase() + card.data.network.slice(1)}
                              </span>
                            )}
                            {card.data.issuer && (
                              <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-700 rounded-full">
                                <i class="fas fa-building mr-1"></i>
                                {card.data.issuer}
                              </span>
                            )}
                          </div>
                        </div>
                      </div>
                    </td>

                    <!-- 虚拟卡列 -->
                    <td class="px-4 py-5 text-center">
                      {card.data.isVirtual ? (
                        <div class="inline-flex flex-col items-center space-y-2 px-3 py-3 bg-green-50 border border-green-200 rounded-lg">
                          <div class="flex items-center space-x-2">
                            <i class="fas fa-check-circle text-green-600"></i>
                            <span class="text-sm font-medium text-green-700">支持</span>
                          </div>
                          <div class="flex flex-col items-center space-y-1">
                            {card.data.virtualNetwork && (
                              <span class="text-xs font-semibold text-blue-600 uppercase bg-blue-100 px-2 py-1 rounded">
                                {card.data.virtualNetwork}
                              </span>
                            )}
                            <div class="text-sm font-medium text-gray-900">
                              {(card.data.virtualCardPrice && card.data.virtualCardPrice > 0)
                                ? `${card.data.virtualCardPrice}`
                                : '免费'}
                            </div>
                          </div>
                        </div>
                      ) : (
                        <div class="inline-flex items-center justify-center space-x-2 px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg">
                          <i class="fas fa-times-circle text-gray-400"></i>
                          <span class="text-sm font-medium text-gray-500">不支持</span>
                        </div>
                      )}
                    </td>
                    
                    <!-- 实体卡列 -->
                    <td class="px-4 py-5 text-center">
                      {card.data.isPhysical ? (
                        <div class="inline-flex flex-col items-center space-y-2 px-3 py-3 bg-green-50 border border-green-200 rounded-lg">
                          <div class="flex items-center space-x-2">
                            <i class="fas fa-check-circle text-green-600"></i>
                            <span class="text-sm font-medium text-green-700">支持</span>
                          </div>
                          <div class="flex flex-col items-center space-y-1">
                            {card.data.physicalNetwork && (
                              <span class="text-xs font-semibold text-blue-600 uppercase bg-blue-100 px-2 py-1 rounded">
                                {card.data.physicalNetwork}
                              </span>
                            )}
                            <div class="text-sm font-medium text-gray-900">
                              {(card.data.physicalCardPrice && card.data.physicalCardPrice > 0)
                                ? `${card.data.physicalCardPrice}`
                                : '免费'}
                            </div>
                          </div>
                        </div>
                      ) : (
                        <div class="inline-flex items-center justify-center space-x-2 px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg">
                          <i class="fas fa-times-circle text-gray-400"></i>
                          <span class="text-sm font-medium text-gray-500">不支持</span>
                        </div>
                      )}
                    </td>

                    <!-- 手续费列 -->
                    <td class="px-4 py-5 text-center">
                      <div class="text-sm font-medium text-gray-900">
                        {(() => {
                          const parsePercentage = (value) => {
                            if (!value || value === false || value === '0%' || value === 'false') return 0;
                            const cleanValue = value.toString().replace(/[%$€£¥]/g, '');
                            const parsed = parseFloat(cleanValue);
                            return isNaN(parsed) ? 0 : parsed;
                          };

                          const depositFee = parsePercentage(card.data.depositFee);
                          const exchangeFee = parsePercentage(card.data.exchangeFee);
                          const transactionFee = parsePercentage(card.data.transactionFee);

                          const total = depositFee + exchangeFee + transactionFee;

                          return total === 0 ? (
                            <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-700 rounded-full">
                              <i class="fas fa-gift mr-1"></i>
                              免费
                            </span>
                          ) : (
                            <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-orange-100 text-orange-700 rounded-full">
                              <i class="fas fa-percentage mr-1"></i>
                              {total.toFixed(1)}%
                            </span>
                          );
                        })()}
                      </div>
                    </td>

                    <!-- 年费/月费列 -->
                    <td class="px-4 py-5 text-center">
                      <div class="text-sm font-medium">
                        {(() => {
                          const hasAnyFee = (card.data.monthlyFee && card.data.monthlyFee !== false) ||
                                          (card.data.annualFee && card.data.annualFee !== false) ||
                                          (card.data.physicalAnnualFee && card.data.physicalAnnualFee !== false) ||
                                          (card.data.virtualAnnualFee && card.data.virtualAnnualFee !== false);

                          return hasAnyFee ? (
                            <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-700 rounded-full">
                              <i class="fas fa-exclamation-triangle mr-1"></i>
                              收取
                            </span>
                          ) : (
                            <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-green-100 text-green-700 rounded-full">
                              <i class="fas fa-check mr-1"></i>
                              免费
                            </span>
                          );
                        })()}
                      </div>
                    </td>

                    <!-- 操作列 -->
                    <td class="px-4 py-5 text-center">
                      <div class="flex flex-col space-y-2">
                        <a
                          href={`/cards/${card.slug}`}
                          class="inline-flex items-center justify-center px-4 py-2 bg-gradient-to-r from-indigo-500 to-purple-600 text-white text-sm font-medium rounded-lg hover:from-indigo-600 hover:to-purple-700 transition-all duration-200 shadow-md hover:shadow-lg transform hover:scale-105"
                        >
                          <i class="fas fa-external-link-alt mr-2"></i>
                          立即申请
                        </a>

                        <!-- 状态标识 -->
                        {card.data.featured && (
                          <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-yellow-100 text-yellow-700 rounded-full animate-pulse">
                            <i class="fas fa-star mr-1"></i>
                            推荐
                          </span>
                        )}
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
          
          <!-- 查看更多 -->
          <div class="bg-gradient-to-r from-gray-50 to-slate-100 px-6 py-4 border-t border-gray-200">
            <div class="text-center">
              <a
                href="/cards"
                class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-medium rounded-lg hover:from-indigo-600 hover:to-purple-700 transition-all duration-200 shadow-md hover:shadow-lg transform hover:scale-105"
              >
                <i class="fas fa-th-list mr-2"></i>
                查看全部卡片
                <span class="ml-2 px-2 py-1 bg-white/20 rounded-full text-xs">
                  {featuredCards.length}+
                </span>
                <i class="fas fa-arrow-right ml-2"></i>
              </a>
              <p class="text-sm text-gray-500 mt-2">
                发现更多优质数字货币卡片，找到最适合您的支付解决方案
              </p>
            </div>
          </div>
        </div>
      </section>

    </main>
  </div>

  <!-- 样式和脚本 -->
  <style>
    .filter-btn {
      @apply bg-gray-100 text-gray-600 hover:bg-gray-200;
    }
    .filter-btn.active {
      @apply bg-indigo-100 text-indigo-700 border-indigo-200;
    }
    .filter-btn:hover {
      @apply shadow-sm transform scale-105;
    }
    .line-clamp-2 {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    tbody tr {
      animation: fadeIn 0.3s ease-out;
    }
  </style>

  <script>
    // 优化的筛选和搜索功能
    document.addEventListener('DOMContentLoaded', function() {
      const filterButtons = document.querySelectorAll('.filter-btn');
      const searchInput = document.getElementById('search-input');
      const resetButton = document.getElementById('reset-filters');
      const filteredCount = document.getElementById('filtered-count');
      const tableBody = document.getElementById('card-table-body');
      const originalRows = Array.from(tableBody.querySelectorAll('tr'));

      let activeFilters = new Set();
      let searchTerm = '';

      // 筛选按钮事件
      filterButtons.forEach(button => {
        button.addEventListener('click', function() {
          const filterId = this.id.replace('filter-', '');

          if (filterId === 'all') {
            // 全部按钮，清除所有筛选
            activeFilters.clear();
            filterButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
          } else {
            // 其他筛选按钮
            document.getElementById('filter-all').classList.remove('active');

            if (activeFilters.has(filterId)) {
              activeFilters.delete(filterId);
              this.classList.remove('active');
            } else {
              activeFilters.add(filterId);
              this.classList.add('active');
            }

            // 如果没有激活的筛选，激活全部按钮
            if (activeFilters.size === 0) {
              document.getElementById('filter-all').classList.add('active');
            }
          }

          applyFilters();
        });
      });

      // 搜索输入事件
      searchInput.addEventListener('input', function() {
        searchTerm = this.value.toLowerCase().trim();
        applyFilters();
      });

      // 重置按钮事件
      resetButton.addEventListener('click', function() {
        activeFilters.clear();
        searchTerm = '';
        searchInput.value = '';

        filterButtons.forEach(btn => btn.classList.remove('active'));
        document.getElementById('filter-all').classList.add('active');

        applyFilters();
      });

      // 应用筛选逻辑
      function applyFilters() {
        let visibleRows = 0;
        
        originalRows.forEach(row => {
          let shouldShow = true;
          const rowText = row.textContent.toLowerCase();

          // 搜索筛选
          if (searchTerm && !rowText.includes(searchTerm)) {
            shouldShow = false;
          }

          // 筛选器逻辑（这里需要根据您的具体数据结构来实现）
          if (activeFilters.size > 0) {
            let passesFilter = false;

            activeFilters.forEach(filter => {
              switch(filter) {
                case 'free':
                  if (rowText.includes('免费')) passesFilter = true;
                  break;
                case 'virtual':
                  if (rowText.includes('虚拟卡') && !rowText.includes('不支持')) passesFilter = true;
                  break;
                case 'visa':
                  if (rowText.includes('visa')) passesFilter = true;
                  break;
                case 'physical':
                  if (rowText.includes('实体卡') && !rowText.includes('不支持')) passesFilter = true;
                  break;
              }
            });

            if (!passesFilter) shouldShow = false;
          }

          // 显示或隐藏行
          if (shouldShow) {
            row.style.display = '';
            visibleRows++;
          } else {
            row.style.display = 'none';
          }
        });
        
        // 更新计数
        if (filteredCount) {
          filteredCount.textContent = visibleRows;
        }
        
        // 显示无结果状态
        if (visibleRows === 0) {
          showNoResultsMessage();
        } else {
          hideNoResultsMessage();
        }
      }

      // 显示无结果消息
      function showNoResultsMessage() {
        const existingMessage = document.getElementById('no-results-message');
        if (existingMessage) return;

        const noResultsRow = document.createElement('tr');
        noResultsRow.id = 'no-results-message';
        noResultsRow.innerHTML = `
          <td colspan="6" class="px-6 py-12 text-center">
            <div class="text-gray-500">
              <i class="fas fa-search text-4xl text-gray-400 mb-4"></i>
              <h3 class="text-lg font-medium text-gray-900 mb-2">未找到匹配的卡片</h3>
              <p class="text-sm text-gray-500 mb-4">请尝试调整筛选条件或搜索关键词</p>
              <button onclick="document.getElementById('reset-filters').click()" class="px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors">
                <i class="fas fa-undo mr-2"></i>重置筛选
              </button>
            </div>
          </td>
        `;
        tableBody.appendChild(noResultsRow);
      }

      // 隐藏无结果消息
      function hideNoResultsMessage() {
        const existingMessage = document.getElementById('no-results-message');
        if (existingMessage) {
          existingMessage.remove();
        }
      }

      // 增强的悬停效果
      const rows = document.querySelectorAll('tbody tr');
      rows.forEach(row => {
        row.addEventListener('mouseenter', function() {
          this.style.transform = 'translateY(-2px)';
          this.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.1)';
        });

        row.addEventListener('mouseleave', function() {
          this.style.transform = 'translateY(0)';
          this.style.boxShadow = 'none';
        });
      });
    });
  </script>

  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</Layout>
